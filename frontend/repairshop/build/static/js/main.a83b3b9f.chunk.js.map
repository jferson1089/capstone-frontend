{"version":3,"sources":["logo.svg","services/api-helper.js","components/print.js","components/updateCustomer.js","components/section.js","components/customer.js","components/calendar.js","components/footer.js","components/service.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","api","axios","create","baseURL","getAllCustomers","a","get","resp","data","createCustomer","customer","console","log","post","deleteCustomer","id","delete","updateCustomer","put","getAllServices","StyleSheet","page","flexDirection","backroundColor","section","margin","padding","flexGrow","Print","Update","props","useState","firstname","setFirstName","lastname","setLastName","phonenumber","setPhoneNumber","vin","setVin","description","setDescription","newUpdate","first_name","last_name","phone_number","vin_number","reason","handleUpdate","e","preventDefault","useId","json","Form","onSubmit","FormGroup","Label","for","Input","type","name","placeholder","onChange","target","value","Button","color","Section","customers","setCustomers","setId","useEffect","makeAPICall","handleDelete","status","custArr","filter","alert","renderCustomers","map","index","key","Toast","ToastBody","size","date_requested","className","onClick","UncontrolledPopover","trigger","placement","PopoverBody","info","doc","jsPDF","text","save","handlePDF","Customer","newCustomer","reset","Schedule","Footer","to","Service","services","setServices","renderServices","service","price","Main","exact","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a83b3b9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'https://jaimeautoshop3.herokuapp.com/'\n})\n\nexport const getAllCustomers = async () => {\n    const resp = await api.get('/api/customer/')\n    return resp.data\n}\n\nexport const createCustomer = async (customer) => {\n    console.log('api helper create customer', customer)\n    const resp = await api.post('/api/customer/', customer)\n    return resp.data\n}\n\nexport const deleteCustomer = async (id) => {\n    const resp = await api.delete(`/api/customer/${id}/`)\n    return resp.data\n}\n\nexport const updateCustomer = async (id, customer) => {\n    console.log('api helper', id)\n    // console.log('api helper customer', newUpdate)\n    const resp = await api.put(`/api/customer/${id}/`, customer)\n    return resp.data\n}\n\nexport const getAllServices = async () => {\n    const resp = await api.get('/api/service/')\n    return resp.data\n}","import React from 'react';\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n    page: {\n        flexDirection: 'row',\n        backroundColor: 'tan'\n    },\n    section: {\n        margin: 10,\n        padding: 10,\n        flexGrow: 1\n    }\n});\n\nfunction Print(props) {\n    console.log('this is on print', props)\n    return (\n        <Document>\n            <Page size=\"A4\" style={styles.page}>\n                <View style={styles.section}>\n                    <Text>Section #1</Text>\n                </View>\n\n                <View style={styles.section}>\n                    <Text>Section #2</Text>\n                </View>\n            </Page>\n\n        </Document>\n    )\n}\n\nexport default Print","import React, { useState } from 'react'\nimport { updateCustomer } from '../services/api-helper'\nimport { Button, Form, FormGroup, Label, Input, Col, FormText } from 'reactstrap';\n\nfunction Update(props) {\n\n    const [firstname, setFirstName] = useState()\n    const [lastname, setLastName] = useState()\n    const [phonenumber, setPhoneNumber] = useState()\n    const [vin, setVin] = useState()\n    const [description, setDescription] = useState()\n\n\n\n    const handleFirstName = e => {\n        setFirstName(e.target.value)\n        console.log('update props', props.useId)\n        console.log('handle firstname', e)\n    }\n\n    const handleLastName = e => {\n        console.log('handle lastname', e)\n        setLastName(e.target.value)\n    }\n\n    const handlePhone = e => {\n        console.log('handle phone', e)\n        setPhoneNumber(e.target.value)\n    }\n\n    const handleVin = e => {\n        console.log('handle vin', e)\n        setVin(e.target.value)\n\n    }\n\n    const handleDescription = e => {\n        console.log('handle description', e)\n\n        setDescription(e.target.value)\n    }\n\n    const newUpdate = {\n        first_name: firstname,\n        last_name: lastname,\n        phone_number: phonenumber,\n        vin_number: vin,\n        reason: description,\n    }\n\n    const handleUpdate = async (e) => {\n        e.preventDefault()\n        const id = props.useId\n        console.log('update id', id)\n        console.log('returned json from click', newUpdate)\n        // e.target.reset()\n        const json = await updateCustomer(id, newUpdate)\n        console.log('resposne', json)\n\n    }\n\n    // const handleUpdate = async (newUpdate) => {\n    //     console.log(' clicked update', newUpdate)\n\n    // }\n\n    return (\n        <>\n            <aside>\n                <Form onSubmit={handleUpdate}>\n                    <FormGroup>\n                        <Label for=\"exampleEmail\">Edit Appointment</Label>\n                        <br />\n                        <Input type=\"text\"\n                            name=\"first_name\"\n                            id=\"exampleFirstName\"\n                            placeholder=\"First Name\"\n                            onChange={handleFirstName}\n                            value={firstname}\n                        />\n                        <Input type=\"text\"\n                            name=\"last_name\"\n                            id=\"exampleLastName\"\n                            placeholder=\"Last Name\"\n                            onChange={handleLastName}\n                            value={lastname}\n\n                        />\n                        <Input type=\"text\"\n                            name=\"phone_number\"\n                            id=\"examplePhone\"\n                            placeholder=\"Phone Number\"\n                            onChange={handlePhone}\n                            value={phonenumber}\n                        />\n                        <Input type=\"text\"\n                            name=\"vin_number\"\n                            id=\"exampleVin\"\n                            placeholder=\"Vin Number\"\n                            onChange={handleVin}\n                            value={vin}\n\n                        />\n                        <Input type=\"textarea\"\n                            name=\"description\"\n                            id=\"exampleDescription\"\n                            placeholder=\"Enter your vehicle issues here...\"\n                            onChange={handleDescription}\n                            value={description}\n                        />\n\n                    </FormGroup>\n                    <Button color=\"warning\">Create New Appointment</Button>{' '}\n                </Form>\n            </aside>\n        </>\n    )\n}\nexport default Update","import React, { useEffect, useState } from 'react'\nimport { getAllCustomers, deleteCustomer } from '../services/api-helper'\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\nimport { FaTrash, FaCar, FaPen, FaPrint } from 'react-icons/fa'\nimport { Route, Link } from \"react-router-dom\";\nimport Print from './print'\nimport jsPDF from 'jspdf';\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport Update from './updateCustomer'\n\nfunction Section() {\n\n    const [customers, setCustomers] = useState([])\n    const [useId, setId] = useState('')\n\n\n\n    useEffect(() => {\n        const makeAPICall = async () => {\n            const resp = await getAllCustomers()\n            console.log(resp)\n            setCustomers(resp)\n        }\n        makeAPICall()\n    }, [])\n\n    const handleDelete = async (id) => {\n        console.log(' clicked delete', customers.id)\n        const json = await deleteCustomer(id)\n        if (json.status === 'success') {\n            const custArr = customers.filter(customer => customer.id !== id)\n            console.log(custArr)\n            alert(\"Customer Appointment Removed\")\n        }\n\n    }\n\n    const handleId = (id) => {\n        console.log('update ', id)\n        setId(id)\n    }\n\n\n    const handlePDF = (customer) => {\n        const info = customer\n        console.log(\"Handle pdf was clicked\", info)\n        var doc = new jsPDF()\n        doc.text('Auto Repair Shop', 10, 10)\n        doc.text('Repair Shop # 999-999-9999', 10, 15)\n        doc.text(`${info.first_name} ${info.last_name}`, 20, 20)\n        doc.text(`${info.phone_number}`, 25, 25)\n        doc.text(`${info.vin_number}`, 20, 30)\n        doc.text(`${info.reason}`, 10, 40)\n        doc.save('repairorder.pdf')\n    }\n    // const handleNewPage = () => {\n    //     console.log('this was clicked for new page!')\n    //     return (\n    //         <>\n    //             <Link to=\"/print\" target=\"_blank\" component={Print}>\n    //             </Link>\n    //         </>\n    //     )\n    // }\n\n    const renderCustomers = customers.map((customer, index) => {\n        return (\n\n            <div key={index}>\n                <Toast>\n                    <ToastBody>\n\n                        <FaCar size={32} />\n                        <h6>{customer.first_name} {customer.last_name}</h6>\n\n                        <h6>Scheduled for : {customer.date_requested}</h6>\n                        <p>Phone :{customer.phone_number}</p>\n                        <p>Vin: {customer.vin_number}</p>\n                        <p>{customer.reason}</p>\n\n                        <div className=\"split\">\n\n                            <Button id=\"Popover3\" type=\"button\">\n                                <FaPen size={20} onClick={() => handleId(customer.id)} />\n                                <i className=\"fas fa-play\">\n                                    <UncontrolledPopover\n                                        trigger=\"legacy\"\n                                        placement=\"top\"\n                                        // isOpen={popoverOpen}\n                                        target=\"Popover3\"\n                                    // toggle={toggle}\n                                    >\n                                        <PopoverBody>\n                                            <Update useId={useId} />\n                                        </PopoverBody>\n                                    </UncontrolledPopover>\n                                </i>\n                            </Button>\n\n                            <FaPrint size={20} onClick={() => handlePDF(customer)} />\n\n\n\n\n\n                            <FaTrash size={20} onClick={() => handleDelete(customer.id)} />\n                        </div>\n                    </ToastBody>\n                </Toast>\n                <hr />\n\n            </div >\n\n\n        )\n    })\n\n\n\n\n    return (\n        <section>\n            {renderCustomers}\n\n        </section>\n    )\n}\n\nexport default Section","import React, { useState } from 'react'\nimport { createCustomer } from '../services/api-helper'\nimport { Button, Form, FormGroup, Label, Input, Col, FormText } from 'reactstrap';\n\n\nfunction Customer() {\n\n    const [firstname, setFirstName] = useState()\n    const [lastname, setLastName] = useState()\n    const [phonenumber, setPhoneNumber] = useState()\n    const [vin, setVin] = useState()\n    const [description, setDescription] = useState()\n\n\n\n    const handleFirstName = e => {\n        setFirstName(e.target.value)\n        console.log('handle firstname', e)\n    }\n\n    const handleLastName = e => {\n        console.log('handle lastname', e)\n        setLastName(e.target.value)\n    }\n\n    const handlePhone = e => {\n        console.log('handle phone', e)\n        setPhoneNumber(e.target.value)\n    }\n\n    const handleVin = e => {\n        console.log('handle vin', e)\n        setVin(e.target.value)\n\n    }\n\n    const handleDescription = e => {\n        console.log('handle description', e)\n        setDescription(e.target.value)\n    }\n\n    const newCustomer = {\n        first_name: firstname,\n        last_name: lastname,\n        phone_number: phonenumber,\n        vin_number: vin,\n        reason: description,\n    }\n\n    // const handleChange = (e) => {\n    //     const value = e.target.value\n    //     setNewCustomer({ [e.target.name]: value })\n    // }\n\n\n\n    const handleCreate = e => {\n        e.preventDefault()\n        console.log('returned json from click', newCustomer)\n        e.target.reset()\n        const json = createCustomer(newCustomer)\n\n    }\n\n\n    return (\n        <aside>\n            <br />\n            <br />\n\n            <Form onSubmit={handleCreate}>\n                <FormGroup>\n                    <Label for=\"exampleEmail\">Create New Appointment</Label>\n                    <br />\n                    <Input type=\"text\"\n                        name=\"first_name\"\n                        id=\"exampleFirstName\"\n                        placeholder=\"First Name\"\n                        onChange={handleFirstName}\n                        value={firstname}\n                    />\n                    <Input type=\"text\"\n                        name=\"last_name\"\n                        id=\"exampleLastName\"\n                        placeholder=\"Last Name\"\n                        onChange={handleLastName}\n                        value={lastname}\n\n                    />\n                    <Input type=\"text\"\n                        name=\"phone_number\"\n                        id=\"examplePhone\"\n                        placeholder=\"Phone Number\"\n                        onChange={handlePhone}\n                        value={phonenumber}\n                    />\n                    <Input type=\"text\"\n                        name=\"vin_number\"\n                        id=\"exampleVin\"\n                        placeholder=\"Vin Number\"\n                        onChange={handleVin}\n                        value={vin}\n\n                    />\n                    <Input type=\"textarea\"\n                        name=\"description\"\n                        id=\"exampleDescription\"\n                        placeholder=\"Enter your vehicle issues here...\"\n                        onChange={handleDescription}\n                        value={description}\n                    />\n\n                </FormGroup>\n                <Button color=\"warning\">Create New Appointment</Button>{' '}\n            </Form>\n\n\n        </aside>\n    )\n}\n\nexport default Customer","import React from 'react'\nimport Calender from 'react-calendar'\n\nfunction Schedule() {\n    return (\n        <section>\n            <Calender />\n        </section>\n    )\n}\n\nexport default Schedule","import React, { useState } from 'react'\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport Customer from './customer'\nimport Calender from './calendar'\nimport { FaCalendarPlus, FaCalendar, FaCarCrash } from 'react-icons/fa'\nimport { Link } from 'react-router-dom'\n\n\nfunction Footer() {\n\n    // const [popoverOpen, setPopoverOpen] = useState(false);\n\n    // const toggle = () => setPopoverOpen(!popoverOpen);\n\n    return (\n        <div className=\"footer\">\n\n            <Button id=\"Popover1\" type=\"button\">\n                <FaCalendarPlus size={32} />\n                <i className=\"fas fa-play\">\n                    <UncontrolledPopover\n                        trigger=\"legacy\"\n                        placement=\"top\"\n                        // isOpen={popoverOpen}\n                        target=\"Popover1\"\n                    // toggle={toggle}\n                    >\n                        <PopoverBody>\n                            <Customer />\n                        </PopoverBody>\n                    </UncontrolledPopover>\n                </i>\n            </Button>\n\n            <Button id=\"Popover2\" type=\"button\">\n                <FaCalendar size={32} />\n                <i className=\"fas fa-play\">\n                    <UncontrolledPopover\n                        trigger=\"legacy\"\n                        placement=\"top\"\n                        // isOpen={popoverOpen}\n                        target=\"Popover2\"\n                    // toggle={toggle}\n                    >\n                        <PopoverBody>\n                            <Calender />\n                        </PopoverBody>\n                    </UncontrolledPopover>\n                </i>\n            </Button>\n\n\n\n            <Link to='/service'>\n                <FaCarCrash size={32} />\n            </Link>\n        </div>\n    )\n}\n\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport { getAllServices } from '../services/api-helper'\nimport { FaWrench } from 'react-icons/fa'\n\nfunction Service() {\n\n    const [services, setServices] = useState([])\n\n\n    useEffect(() => {\n        const makeAPICall = async () => {\n            const resp = await getAllServices()\n            console.log('services', resp)\n            setServices(resp)\n        }\n        makeAPICall()\n    }, [])\n\n    const renderServices = services.map((service, index) => {\n        console.log('servicesmap', service)\n        return (\n            <div key={index} className=\"serviceItem\">\n                <FaWrench size={32} />\n                <h5>{service.name} : {service.price} </h5>\n            </div>\n        )\n\n\n\n\n    })\n\n\n\n\n\n\n\n\n    return (\n        <section>\n            {renderServices}\n        </section>\n    )\n}\nexport default Service","import React, { useState } from 'react'\nimport Section from './section'\nimport Footer from './footer'\nimport { Route } from 'react-router-dom'\nimport Service from './service'\n\n\nfunction Main() {\n\n\n\n    return (\n        <main>\n            <br />\n\n            <Route exact path=\"/\" component={Section} />\n            <Route exact path='/service' component={Service} />\n\n\n\n\n\n\n            {/* <Button id=\"Popover1\" type=\"button\">\n                New Appointment\n                <i className=\"fas fa-play\">\n                    <UncontrolledPopover\n                        trigger=\"legacy\"\n                        placement=\"top\"\n                        isOpen={popoverOpen}\n                        target=\"Popover1\"\n                        toggle={toggle}\n                    >\n                        <PopoverBody>\n                            <Customer />\n                        </PopoverBody>\n                    </UncontrolledPopover>\n                </i>\n            </Button> */}\n            <Footer />\n\n        </main>\n\n    )\n}\n\nexport default Main","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/main'\nimport { Route } from 'react-router-dom'\nimport Print from './components/print'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}