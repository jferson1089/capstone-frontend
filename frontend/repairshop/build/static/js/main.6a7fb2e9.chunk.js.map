{"version":3,"sources":["services/api-helper.js","components/print.js","components/section.js","components/customer.js","components/calendar.js","components/footer.js","components/main.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["api","axios","create","baseURL","getAllCustomers","a","get","resp","data","createCustomer","customer","post","deleteCustomer","id","delete","Print","props","Section","useState","customers","setCustomers","useEffect","console","log","makeAPICall","handleDelete","status","custArr","filter","alert","handleNewPage","to","target","component","renderCustomers","map","index","key","Toast","ToastBody","size","first_name","last_name","date_requested","phone_number","vin_number","reason","className","onClick","Customer","firstname","setFirstName","lastname","setLastName","phonenumber","setPhoneNumber","vin","setVin","description","setDescription","newCustomer","Col","Form","onSubmit","e","preventDefault","reset","FormGroup","Label","for","Input","type","name","placeholder","onChange","value","Button","color","Schedule","Footer","UncontrolledPopover","trigger","placement","PopoverBody","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.6a7fb2e9.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'https://jaimeautoshop3.herokuapp.com/'\n})\n\nexport const getAllCustomers = async () => {\n    const resp = await api.get('/api/customer/')\n    return resp.data\n}\n\nexport const createCustomer = async (customer) => {\n    const resp = await api.post('/api/customer/', customer)\n    return resp.data\n}\n\nexport const deleteCustomer = async (id) => {\n    const resp = await api.delete(`/api/customer/${id}`)\n    return resp.data\n}\n\nexport const updateCustomer = async (id, customer) => {\n    const resp = await api.put(`/api/customer/${id}`, customer)\n    return resp.data\n}","import React from 'react'\n\nfunction Print(props) {\n    return (\n        <><h6>This is a pdf </h6></>\n    )\n}\n\nexport default Print","import React, { useEffect, useState } from 'react'\nimport { getAllCustomers, deleteCustomer } from '../services/api-helper'\nimport { Toast, ToastBody, ToastHeader } from 'reactstrap';\nimport { FaTrash, FaCar, FaPen, FaPrint } from 'react-icons/fa'\nimport { Route, Link } from \"react-router-dom\";\nimport Print from './print'\n\n\nfunction Section() {\n\n    const [customers, setCustomers] = useState([])\n    const [deleted, setDeleted] = useState(false)\n\n\n    useEffect(() => {\n        const makeAPICall = async () => {\n            const resp = await getAllCustomers()\n            console.log(resp)\n            setCustomers(resp)\n        }\n        makeAPICall()\n    }, [])\n\n    const handleDelete = async (id) => {\n        console.log(' clicked delete', customers.id)\n        const json = await deleteCustomer(id)\n        if (json.status === 'success') {\n            const custArr = customers.filter(customer => customer.id !== id)\n            console.log(custArr)\n            alert(\"Customer Appointment Removed\")\n        }\n\n\n    }\n\n    const handleNewPage = () => {\n        console.log('this was clicked for new page!')\n        return (\n            <>\n                <Link to=\"/print\" target=\"_blank\" component={Print}>\n                </Link>\n            </>\n        )\n    }\n\n    const renderCustomers = customers.map((customer, index) => {\n        return (\n\n            <div key={index}>\n                <Toast>\n                    <ToastBody>\n\n                        <FaCar size={32} />\n                        <h6>{customer.first_name} {customer.last_name}</h6>\n\n                        <h6>Scheduled for : {customer.date_requested}</h6>\n                        <p>Phone :{customer.phone_number}</p>\n                        <p>Vin: {customer.vin_number}</p>\n                        <p>{customer.reason}</p>\n                        <div className=\"split\">\n                            <FaPen />\n\n                            <FaPrint onClick={handleNewPage} />\n\n\n                            <FaTrash onClick={() => handleDelete(customer.id)} />\n                        </div>\n                    </ToastBody>\n                </Toast>\n                <hr />\n\n            </div >\n\n\n        )\n    })\n\n\n\n\n    return (\n        <section>\n            {renderCustomers}\n\n        </section>\n    )\n}\n\nexport default Section","import React, { useState } from 'react'\nimport { createCustomer } from '../services/api-helper'\nimport { Button, Form, FormGroup, Label, Input, Col, FormText } from 'reactstrap';\n\nfunction Customer() {\n\n    const [firstname, setFirstName] = useState()\n    const [lastname, setLastName] = useState()\n    const [phonenumber, setPhoneNumber] = useState()\n    const [vin, setVin] = useState()\n    const [description, setDescription] = useState()\n\n\n\n    const handleFirstName = e => {\n        setFirstName(e.target.value)\n        console.log('handle firstname', e)\n    }\n\n    const handleLastName = e => {\n        console.log('handle lastname', e)\n        setLastName(e.target.value)\n    }\n\n    const handlePhone = e => {\n        console.log('handle phone', e)\n        setPhoneNumber(e.target.value)\n    }\n\n    const handleVin = e => {\n        console.log('handle vin', e)\n        setVin(e.target.value)\n\n    }\n\n    const handleDescription = e => {\n        console.log('handle description', e)\n        setDescription(e.target.value)\n    }\n\n    const newCustomer = {\n        first_name: firstname,\n        last_name: lastname,\n        phone_number: phonenumber,\n        vin_number: vin,\n        reason: description,\n    }\n\n    // const handleChange = (e) => {\n    //     const value = e.target.value\n    //     setNewCustomer({ [e.target.name]: value })\n    // }\n\n\n\n    const handleCreate = e => {\n        e.preventDefault()\n        console.log('returned json from click', newCustomer)\n        e.target.reset()\n        const json = createCustomer(newCustomer)\n\n    }\n\n\n    return (\n        <aside>\n            <br />\n            <br />\n            <Col>\n                <Form onSubmit={handleCreate}>\n                    <FormGroup>\n                        <Label for=\"exampleEmail\">Create New Appointment</Label>\n                        <br />\n                        <Input type=\"text\"\n                            name=\"first_name\"\n                            id=\"exampleFirstName\"\n                            placeholder=\"First Name\"\n                            onChange={handleFirstName}\n                            value={firstname}\n                        />\n                        <Input type=\"text\"\n                            name=\"last_name\"\n                            id=\"exampleLastName\"\n                            placeholder=\"Last Name\"\n                            onChange={handleLastName}\n                            value={lastname}\n\n                        />\n                        <Input type=\"text\"\n                            name=\"phone_number\"\n                            id=\"examplePhone\"\n                            placeholder=\"Phone Number\"\n                            onChange={handlePhone}\n                            value={phonenumber}\n                        />\n                        <Input type=\"text\"\n                            name=\"vin_number\"\n                            id=\"exampleVin\"\n                            placeholder=\"Vin Number\"\n                            onChange={handleVin}\n                            value={vin}\n\n                        />\n                        <Input type=\"textarea\"\n                            name=\"description\"\n                            id=\"exampleDescription\"\n                            placeholder=\"Enter your vehicle issues here...\"\n                            onChange={handleDescription}\n                            value={description}\n                        />\n\n                    </FormGroup>\n                    <Button color=\"warning\">Create New Appointment</Button>{' '}\n                </Form>\n            </Col>\n\n        </aside>\n    )\n}\n\nexport default Customer","import React from 'react'\nimport Calender from 'react-calendar'\n\nfunction Schedule() {\n    return (\n        <aside>\n            <Calender />\n        </aside>\n    )\n}\n\nexport default Schedule","import React, { useState } from 'react'\nimport { Button, UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport Customer from './customer'\nimport Calender from './calendar'\nimport { FaCalendarPlus, FaCalendar } from 'react-icons/fa'\n\nfunction Footer() {\n\n    // const [popoverOpen, setPopoverOpen] = useState(false);\n\n    // const toggle = () => setPopoverOpen(!popoverOpen);\n\n    return (\n        <div className=\"footer\">\n\n            <Button id=\"Popover1\" type=\"button\">\n                <FaCalendarPlus size={32} />\n                <i className=\"fas fa-play\">\n                    <UncontrolledPopover\n                        trigger=\"legacy\"\n                        placement=\"top\"\n                        // isOpen={popoverOpen}\n                        target=\"Popover1\"\n                    // toggle={toggle}\n                    >\n                        <PopoverBody>\n                            <Customer />\n                        </PopoverBody>\n                    </UncontrolledPopover>\n                </i>\n            </Button>\n\n            <Button id=\"Popover2\" type=\"button\">\n                <FaCalendar size={32} />\n                <i className=\"fas fa-play\">\n                    <UncontrolledPopover\n                        trigger=\"legacy\"\n                        placement=\"top\"\n                        // isOpen={popoverOpen}\n                        target=\"Popover2\"\n                    // toggle={toggle}\n                    >\n                        <PopoverBody>\n                            <Calender />\n                        </PopoverBody>\n                    </UncontrolledPopover>\n                </i>\n            </Button>\n\n\n            <p>Calender</p>\n            <p>Service</p>\n        </div>\n    )\n}\n\nexport default Footer","import React, { useState } from 'react'\nimport Section from './section'\nimport Footer from './footer'\n\n\nfunction Main() {\n\n\n\n    return (\n        <main>\n            <br />\n\n            <Section />\n\n\n\n\n\n\n\n            {/* <Button id=\"Popover1\" type=\"button\">\n                New Appointment\n                <i className=\"fas fa-play\">\n                    <UncontrolledPopover\n                        trigger=\"legacy\"\n                        placement=\"top\"\n                        isOpen={popoverOpen}\n                        target=\"Popover1\"\n                        toggle={toggle}\n                    >\n                        <PopoverBody>\n                            <Customer />\n                        </PopoverBody>\n                    </UncontrolledPopover>\n                </i>\n            </Button> */}\n            <Footer />\n\n        </main>\n\n    )\n}\n\nexport default Main","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Main from './components/main'\nimport { Route } from 'react-router-dom'\nimport Print from './components/print'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}